similiar to bubble sort, but instead of first placing large values into sorted position, it places small values into sorted position

function selectionSort(arr){
    for(var i = 0; i < arr.length; i++){
        var lowest = i;
        for(var j = i+1; j < arr.length; j++){
            if(arr[j] < arr[lowest]){
                lowest = j;
            }
        }
        if(i !== lowest){
            var temp = arr[i];
            arr[i] = arr[lowest];
            arr[lowest] = temp;
        }
    }
    return arr;
}
selectionSort([0, 2, 34, 22, 10, 19, 17])

function selectionSort(arr){
    const swap = (arr, idx1, idx2) =>
        ([arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]])
    for(var i = 0; i < arr.length; i++){
        var lowest = i;
        for(var j = i+1; j < arr.length; j++){
            if(arr[j] < arr[lowest]){
                lowest = j;
            }
        }
        if(i !== lowest) swap(arr, i, lowest)
    }
    return arr;
}
selectionSort([0, 2, 34, 22, 10, 19, 17])

//time complexity is O(n^2)
Selection sort is almost same as Bubble sort, except that the bumber of swaps is less in selection sort as compared to bubble sort, in bubble sort we have to swap
continuously whereas in seklection sort we swap at the end